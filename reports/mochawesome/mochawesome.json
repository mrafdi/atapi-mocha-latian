{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2020-03-11T03:45:09.129Z",
    "end": "2020-03-11T03:45:09.607Z",
    "duration": 478,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "2e47cff6-6790-4c69-8287-ef5879999e56",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "01679475-e98b-436a-8cbb-c691a89c0a86",
        "title": "OMDB Movie List",
        "fullFile": "/Users/macbook/Documents/atapi-latian/api/test/movieList2.js",
        "file": "/api/test/movieList2.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "@get As a user I can search movie using OMDB API",
            "fullTitle": "OMDB Movie List @get As a user I can search movie using OMDB API",
            "timedOut": false,
            "duration": 77,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200);",
            "err": {},
            "isRoot": false,
            "uuid": "54206238-5d5a-4113-b872-4caff53010dc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As a user I cannot search movie using keyword blank keyword",
            "fullTitle": "OMDB Movie List @get As a user I cannot search movie using keyword blank keyword",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "keySearch = element.changing;\nconst response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200, response.body.Error);",
            "err": {},
            "isRoot": false,
            "uuid": "a3d61ad1-56e4-4fd6-9abe-8656dc6671cd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As a user I cannot search movie using keyword sy format",
            "fullTitle": "OMDB Movie List @get As a user I cannot search movie using keyword sy format",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "keySearch = element.changing;\nconst response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200, response.body.Error);",
            "err": {},
            "isRoot": false,
            "uuid": "14d91516-799b-4fdc-89b7-5e95b06dd06c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As auser I cannot search movie using blank api key",
            "fullTitle": "OMDB Movie List @get As auser I cannot search movie using blank api key",
            "timedOut": false,
            "duration": 283,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "apiKey = element.changing;\nconst response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(401, response.body.Error);\n\t      assert(response.body.Response).to.equal('False');\n\t      assert(response.body.Error).to.equal('Invalid API key!', response.body.Error);",
            "err": {
              "message": "AssertionError: No API key provided.: expected 'No API key provided.' to equal 'Invalid API key!'",
              "estack": "AssertionError: No API key provided.: expected 'No API key provided.' to equal 'Invalid API key!'\n    at Context.<anonymous> (api/test/movieList2.js:39:39)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
              "diff": "- No API key provided.\n+ Invalid API key!\n"
            },
            "isRoot": false,
            "uuid": "d9205527-a9ff-4c97-bd66-3a9c677d48ac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get As auser I cannot search movie using wrong api key",
            "fullTitle": "OMDB Movie List @get As auser I cannot search movie using wrong api key",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "apiKey = element.changing;\nconst response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(401, response.body.Error);\n\t      assert(response.body.Response).to.equal('False');\n\t      assert(response.body.Error).to.equal('Invalid API key!', response.body.Error);",
            "err": {},
            "isRoot": false,
            "uuid": "11405634-9edb-4b88-b446-ddc4a85c2385",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "54206238-5d5a-4113-b872-4caff53010dc",
          "a3d61ad1-56e4-4fd6-9abe-8656dc6671cd",
          "14d91516-799b-4fdc-89b7-5e95b06dd06c",
          "11405634-9edb-4b88-b446-ddc4a85c2385"
        ],
        "failures": [
          "d9205527-a9ff-4c97-bd66-3a9c677d48ac"
        ],
        "pending": [],
        "skipped": [],
        "duration": 454,
        "root": false,
        "rootEmpty": false,
        "_timeout": 180000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 180000
  },
  "copyrightYear": 2020
}